let g:ale_fix_on_save = 0
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'javascript.jsx': ['eslint']
\}

" In ~/.vim/vimrc, or somewhere similar.
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['eslint'],
\   'javascript.jsx': ['eslint'],
\   'ruby': ['rubocop'],
\}

noremap <Leader><Leader>f :ALEFix<CR>
noremap <Leader><Leader>n :ALENext<CR>
noremap <Leader><Leader>m :ALEPrevious<CR>

noremap <Leader>w :update<CR>
noremap <Leader>q :quit<CR>

set tags^=./.git/tags;
colorscheme night-owl

" Split panes shortcuts
map <Leader><Leader>- :sp<Esc>
map <Leader><Leader>\ :vsp<Esc>

let g:winresizer_start_key = '<Leader>e'
let g:winresizer_vert_resize = 2
let g:winresizer_horiz_resize = 2

map <C-m> :NERDTreeToggle<CR>

let g:UltiSnipsExpandTrigger="<c-l>"
let g:UltiSnipsJumpForwardTrigger="<c-m>"
let g:UltiSnipsJumpBackwardTrigger="<c-n>"

nnoremap <Leader>s<Leader> :b#<CR>
nnoremap <Leader><Leader>d :bd<CR>

nnoremap <leader>ntf :NERDTreeFind<cr>

nnoremap <leader>fr :VtrFocusRunner<cr>
nnoremap <leader>sf :VtrSendFile<cr>
nnoremap <leader>m :VtrSendCommandToRunner<cr>
nnoremap <leader>vap :VtrAttachToPane<cr>

nnoremap <C-t>     :tabnew<CR>

nnoremap \ :Ag<SPACE>
nmap <silent> <C-f> :Ag "<cword>" <CR>

let g:VtrUseVtrMaps = 1
nnoremap <leader>c :VtrSendCtrlC<cr>

" Align GitHub-flavored Markdown tables
au FileType markdown vmap <Leader><Bslash> :EasyAlign*<Bar><Enter>
ino <C-A> <C-O>yiW<End>=<C-R>=<C-R>0<CR>

" Allow to switch between buffers without having to save them and don't loose changes
set hidden

let g:UltiSnipsExpandTrigger="<c-l>"

let g:user_emmet_leader_key='<C-k>'
let g:user_emmet_settings = {
\  'javascript.jsx' : {
\      'extends': 'jsx',
\      'quote_char': "'",
\  },
\}

let g:ale_javascript_eslint_executable = 'eslint_d'
let g:ale_ruby_rubocop_executable = '/usr/local/bin/rubocop-daemon-wrapper'

highlight Pmenu ctermfg=white ctermbg=black
highlight PmenuSel ctermfg=white ctermbg=darkblue

command! ALEDisableFixers       let g:ale_fix_on_save=0
command! ALEEnableFixers        let g:ale_fix_on_save=1
command! ALEDisableFixersBuffer let b:ale_fix_on_save=0
command! ALEEnableFixersBuffer  let b:ale_fix_on_save=0
command! ALEToggleFixers call functions#fckALEToggle('global')
command! ALEToggleFixersBuffer call functions#fckALEToggle('buffer')

noremap <C-n> :call ReactGotoDef()<CR>

let g:rspec_command = "call VtrSendCommand('bundle exec spring rspec {spec}')"
" vim-rspec mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

nnoremap <C-c> :VtrSendKeysRaw ^C<cr>

"let g:prettier#autoformat = 0
"autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue,*.yaml,*.html PrettierAsync
command! EnablePrettier autocmd BufWritePre *.js,*.jsx,*.mjs,*.ts,*.tsx,*.css,*.less,*.scss,*.json,*.graphql,*.md,*.vue,*.yaml,*.html PrettierAsync
